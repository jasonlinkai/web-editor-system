version: "3"
services:
  server:
    container_name: web-editor-server-container
    build:
      context: ./server
      args:
        MYSQL_DATABASE_HOST: $MYSQL_DATABASE_HOST
        MYSQL_DATABASE_PORT: $MYSQL_DATABASE_PORT
        MYSQL_DATABASE_DATABASE: $MYSQL_DATABASE_DATABASE
        MYSQL_DATABASE_USERNAME: $MYSQL_DATABASE_USERNAME
        MYSQL_DATABASE_PASSWORD: $MYSQL_DATABASE_PASSWORD
        AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
        AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
        AWS_SECRET_REGION: $AWS_SECRET_REGION
        GOOGLE_OAUTH2_SECRET: $GOOGLE_OAUTH2_SECRET
        GOOGLE_OAUTH2_CLIENT_ID: $GOOGLE_OAUTH2_CLIENT_ID
        JWT_SECRET: $JWT_SECRET
        CLIENT_URL: $CLIENT_URL
        SERVER_HOST: $SERVER_HOST
        PORT: $PORT
    ports:
      - 3001:3001
    healthcheck:
      test: curl --fail $SERVER_HOST/test-server
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - server_uploads:/usr/app/public/uploads
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway

  database:
    container_name: web-editor-database-container
    build: 
      context: ./database
      args:
        MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
        MYSQL_DATABASE: $MYSQL_DATABASE
        MYSQL_USER: $MYSQL_USER
        MYSQL_PASSWORD: $MYSQL_PASSWORD
    ports:
      - 3906:3306
    healthcheck:
      test: mysqladmin ping -h localhost -p$MYSQL_ROOT_PASSWORD
      timeout: 20s
      retries: 10
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway

  client:
    container_name: web-editor-client-container
    build:
      context: ./client
      args:
        NEXT_PUBLIC_HOST: $NEXT_PUBLIC_HOST
        NEXT_PUBLIC_API_URL: $NEXT_PUBLIC_API_URL
        NEXT_PUBLIC_PRIVATE_API_URL: $NEXT_PUBLIC_PRIVATE_API_URL
        NEXT_PUBLIC_CDN_URL: $NEXT_PUBLIC_CDN_URL
    ports:
      - 3000:3000
    depends_on:
      server:
        condition: service_healthy
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway

volumes:
  db_data:
  server_uploads:

networks:
  app-network:
    driver: bridge